generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ship        ship[]
}

model crew_member {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String    @db.Uuid
  ship_id    String    @db.Uuid
  position   String    @db.VarChar(255)
  start_date DateTime  @db.Timestamp(6)
  end_date   DateTime? @db.Timestamp(6)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  ship       ship      @relation(fields: [ship_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model log {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String   @db.Uuid
  action      String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model schedule {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ship_id            String   @db.Uuid
  departure_date     DateTime @db.Timestamp(6)
  arrival_date       DateTime @db.Timestamp(6)
  departure_location String   @db.VarChar(255)
  arrival_location   String   @db.VarChar(255)
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @db.Timestamp(6)
  ship               ship     @relation(fields: [ship_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ship {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String        @db.VarChar(255)
  company_id  String        @db.Uuid
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  crew_member crew_member[]
  schedule    schedule[]
  company     company       @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  company     company[]
  crew_member crew_member[]
  log         log[]
}
